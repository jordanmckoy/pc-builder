generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  username String? @unique
  password String?
  Build    Build[]
}

model CPU {
  id                String  @id @default(uuid())
  brand             String
  model             String
  socket            String
  cores             Int
  base_clock_speed  Float
  boost_clock_speed Float
  price             Float
  stock             Int
  image             String
  tdp               Int
  Build             Build[]
}

model Cooler {
  id               String  @id @default(uuid())
  brand            String
  model            String
  fan_size         String
  noise_level      Float
  cooling_capacity Float
  price            Float
  stock            Int
  image            String  @db.Text
  Build            Build[]
}

model RAM {
  id       String  @id @default(uuid())
  brand    String
  model    String
  speed    Int
  capacity Int
  latency  String
  price    Float
  stock    Int
  image    String  @db.Text
  Build    Build[]
}

model Motherboard {
  id          String  @id @default(uuid())
  brand       String
  model       String
  socket      String
  chipset     String
  form_factor String
  price       Float
  stock       Int
  image       String  @db.Text
  Build       Build[]
}

model GPU {
  id                String  @id @default(uuid())
  brand             String
  model             String
  memory_capacity   Int
  core_clock_speed  Float
  boost_clock_speed Float
  price             Float
  stock             Int
  tdp               Int
  image             String  @db.Text
  Build             Build[]
}

model PSU {
  id                String  @id @default(uuid())
  brand             String
  model             String
  wattage           Int
  efficiency_rating String
  modular           Boolean
  price             Float
  stock             Int
  image             String  @db.Text
  Build             Build[]
}

model Case {
  id               String  @id @default(uuid())
  brand            String
  model            String
  form_factor      String
  radiator_support Int
  price            Float
  stock            Int
  image            String  @db.Text
  Build            Build[]
}

model Storage {
  id          String  @id @default(uuid())
  brand       String
  model       String
  capacity    Int
  type        String
  form_factor String
  interface   String
  read_speed  Int
  write_speed Int
  price       Float
  stock       Int
  image       String  @db.Text
  Build       Build[]
}

model PreBuilt {
  id          String @id @default(uuid())
  name        String @db.Text
  cpu         String
  cooler      String
  ram         String
  motherboard String
  gpu         String
  psu         String
  case        String
  price       Float
  stock       Int
  image       String @db.Text
  description String @db.Text
}

model Build {
  id             Int         @id @default(autoincrement())
  user_id        String
  cpu_id         String
  cooler_id      String
  ram_id         String
  motherboard_id String
  gpu_id         String
  psu_id         String
  case_id        String
  storage_id     String
  userId         String?
  Case           Case        @relation(fields: [case_id], references: [id])
  Cooler         Cooler      @relation(fields: [cooler_id], references: [id])
  CPU            CPU         @relation(fields: [cpu_id], references: [id])
  GPU            GPU         @relation(fields: [gpu_id], references: [id])
  Motherboard    Motherboard @relation(fields: [motherboard_id], references: [id])
  PSU            PSU         @relation(fields: [psu_id], references: [id])
  RAM            RAM         @relation(fields: [ram_id], references: [id])
  Storage        Storage     @relation(fields: [storage_id], references: [id])
  User           User?       @relation(fields: [userId], references: [id])

  @@index([case_id], map: "Build_case_id_fkey")
  @@index([cooler_id], map: "Build_cooler_id_fkey")
  @@index([cpu_id], map: "Build_cpu_id_fkey")
  @@index([gpu_id], map: "Build_gpu_id_fkey")
  @@index([motherboard_id], map: "Build_motherboard_id_fkey")
  @@index([psu_id], map: "Build_psu_id_fkey")
  @@index([ram_id], map: "Build_ram_id_fkey")
  @@index([storage_id], map: "Build_storage_id_fkey")
  @@index([userId], map: "Build_userId_fkey")
}
